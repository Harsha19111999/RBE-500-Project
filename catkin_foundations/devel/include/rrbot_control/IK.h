// Generated by gencpp from file rrbot_control/IK.msg
// DO NOT EDIT!


#ifndef RRBOT_CONTROL_MESSAGE_IK_H
#define RRBOT_CONTROL_MESSAGE_IK_H

#include <ros/service_traits.h>


#include <rrbot_control/IKRequest.h>
#include <rrbot_control/IKResponse.h>


namespace rrbot_control
{

struct IK
{

typedef IKRequest Request;
typedef IKResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct IK
} // namespace rrbot_control


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::rrbot_control::IK > {
  static const char* value()
  {
    return "d1d12092c54e7725284bed2d4e255885";
  }

  static const char* value(const ::rrbot_control::IK&) { return value(); }
};

template<>
struct DataType< ::rrbot_control::IK > {
  static const char* value()
  {
    return "rrbot_control/IK";
  }

  static const char* value(const ::rrbot_control::IK&) { return value(); }
};


// service_traits::MD5Sum< ::rrbot_control::IKRequest> should match
// service_traits::MD5Sum< ::rrbot_control::IK >
template<>
struct MD5Sum< ::rrbot_control::IKRequest>
{
  static const char* value()
  {
    return MD5Sum< ::rrbot_control::IK >::value();
  }
  static const char* value(const ::rrbot_control::IKRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::rrbot_control::IKRequest> should match
// service_traits::DataType< ::rrbot_control::IK >
template<>
struct DataType< ::rrbot_control::IKRequest>
{
  static const char* value()
  {
    return DataType< ::rrbot_control::IK >::value();
  }
  static const char* value(const ::rrbot_control::IKRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::rrbot_control::IKResponse> should match
// service_traits::MD5Sum< ::rrbot_control::IK >
template<>
struct MD5Sum< ::rrbot_control::IKResponse>
{
  static const char* value()
  {
    return MD5Sum< ::rrbot_control::IK >::value();
  }
  static const char* value(const ::rrbot_control::IKResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::rrbot_control::IKResponse> should match
// service_traits::DataType< ::rrbot_control::IK >
template<>
struct DataType< ::rrbot_control::IKResponse>
{
  static const char* value()
  {
    return DataType< ::rrbot_control::IK >::value();
  }
  static const char* value(const ::rrbot_control::IKResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RRBOT_CONTROL_MESSAGE_IK_H
